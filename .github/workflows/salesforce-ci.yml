name: 🚀 SOCAR B2B Salesforce CI/CD

on:
  push:
    branches: [ main, develop, feature/* ]
  pull_request:
    branches: [ main, develop ]

jobs:
  # 코드 품질 검사
  code-quality:
    name: 📊 Code Quality Check
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install Dependencies
      run: npm ci
      
    - name: 🎨 Prettier Check
      run: npm run prettier:verify
      
    - name: 🔍 ESLint Check
      run: npm run lint
      
    - name: 🧪 Run Unit Tests
      run: npm run test:unit:coverage
      
    - name: 📋 Upload Coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        fail_ci_if_error: false

  # Salesforce 배포 검증
  salesforce-validate:
    name: ⚡ Salesforce Validation
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Install Salesforce CLI
      run: |
        npm install -g @salesforce/cli
        echo "${{ secrets.SALESFORCE_AUTH_URL }}" > ./SALESFORCE_AUTH_URL.txt
        
    - name: 🔐 Authorize Salesforce Org
      run: |
        sf org login sfdx-url --sfdx-url-file ./SALESFORCE_AUTH_URL.txt --alias target-org
        
    - name: ✅ Validate Deployment
      run: |
        sf project deploy validate --source-dir force-app --target-org target-org --test-level RunLocalTests
        
    - name: 🧹 Cleanup
      run: rm -f ./SALESFORCE_AUTH_URL.txt

  # 보안 스캔
  security-scan:
    name: 🛡️ Security Scan
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔍 Run PMD Analysis
      run: |
        chmod +x scripts/run-security-scan.sh
        ./scripts/run-security-scan.sh
        
    - name: 📊 Upload Security Report
      uses: actions/upload-artifact@v3
      with:
        name: security-report
        path: security-report.html

  # 브랜치별 자동 배포
  deploy:
    name: 🚀 Deploy to Salesforce
    runs-on: ubuntu-latest
    needs: [code-quality, salesforce-validate, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔧 Install Salesforce CLI
      run: npm install -g @salesforce/cli
      
    - name: 🔐 Authorize Production Org
      run: |
        echo "${{ secrets.SALESFORCE_PROD_AUTH_URL }}" > ./SALESFORCE_PROD_AUTH_URL.txt
        sf org login sfdx-url --sfdx-url-file ./SALESFORCE_PROD_AUTH_URL.txt --alias prod-org
        
    - name: 🚀 Deploy to Production
      run: |
        sf project deploy start --source-dir force-app --target-org prod-org --test-level RunLocalTests
        
    - name: 📬 Notify Success
      uses: 8398a7/action-slack@v3
      with:
        status: success
        text: '🎉 SOCAR B2B 프로젝트가 성공적으로 배포되었습니다!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        
    - name: 🧹 Cleanup
      run: rm -f ./SALESFORCE_PROD_AUTH_URL.txt

  # Agentforce 컴포넌트 특별 검증
  agentforce-validation:
    name: 🤖 Agentforce Component Validation
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔍 Validate Agentforce Components
      run: |
        echo "🤖 Validating Agentforce components..."
        # Agentforce 관련 메타데이터 검증
        if [ -d "force-app/main/default/agentforce" ]; then
          echo "✅ Agentforce components found"
          # 추가 검증 로직
        else
          echo "⚠️ No Agentforce components found"
        fi
